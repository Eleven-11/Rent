<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.heeexy.example.dao.UserCollectionDao">

    <!-- 小程序dao方法实现-->
    <!-- 校验是否已收藏该帖子 -->
    <select id="getIfCollect" resultType="com.alibaba.fastjson.JSONObject">
        select id from t_user_collection
        where USER_ID = #{userId} and POST_ID = #{postId} AND IS_DEL=0
    </select>
    <!--判断用户是否收藏过该帖（包含取消收藏状态）-->
    <select id="getIfCollected" resultType="com.alibaba.fastjson.JSONObject">
        select id from t_user_collection
        where USER_ID = #{userId} and POST_ID = #{postId}
    </select>
    <!--获取当前用户收藏状态-->
    <select id="getCollectStatus" resultType="java.lang.Integer">
        select IS_DEL from t_user_collection
        where USER_ID = #{userId} and POST_ID = #{postId}
    </select>

    <!-- 更新帖子收藏状态 -->
    <update id="updateDelCollect">
        update t_user_collection
        SET IS_DEL =
                IF (
                    t_user_collection.IS_DEL = '1',
                    '0',
                    '1'
                )
                WHERE
                    t_user_collection.USER_ID =#{userId} AND t_user_collection.POST_ID = #{postId}
    </update>

    <!-- 后台dao方法实现 -->
    <!-- 统计用户收藏条数 -->
    <select id="countCollection" resultType="Integer">
    SELECT COUNT(1)
    FROM
        t_wx_user w,
        t_post_base u,
        t_user_collection m,
        t_post_picture p
    WHERE
        m.USER_ID = #{wxUserId,jdbcType = VARCHAR}
    AND u.ID = m.POST_ID
    AND w.USER_ID = u.USER_ID
    AND m.POST_ID = p.POST_ID
    ORDER BY
        m.SORT_TIME
    </select>

    <!-- 获取用户收藏列表 -->
    <select id="getUserCollList" resultType="com.alibaba.fastjson.JSONObject">
        SELECT
            m.POST_ID postId,
            w.WX_NICK_NAME poster,
            u.CONTENT content,
			(SELECT TYPE_NAME FROM t_post_type WHERE ID	= u.TYPE_ID) postType ,
            (SELECT WX_AVATAR_URL FROM t_wx_user WHERE USER_ID = u.USER_ID) image ,
            DATE_FORMAT(m.CREATE_TIME, '%Y-%m-%d %T') collTime,
            DATE_FORMAT(m.SORT_TIME, '%Y-%m-%d %T') sortTime
        FROM
            t_wx_user w,
            t_post_base u,
            t_user_collection m
        WHERE
            m.USER_ID = #{wxUserId,jdbcType = VARCHAR}
        AND u.ID = m.POST_ID
        AND w.USER_ID = u.USER_ID
        AND m.is_del = 0
        order by m.SORT_TIME
    </select>


    <!-- 收藏帖子排序 -->
    <update id="sortUserColl" >
        START TRANSACTION;
        UPDATE t_user_collection SET t_user_collection.sort_time =#{laterSortTime,jdbcType = DATE} WHERE t_user_collection.post_id = #{formerPostId,jdbcType = VARCHAR};
        UPDATE t_user_collection SET t_user_collection.sort_time =#{formerSortTime,jdbcType = DATE} WHERE t_user_collection.post_id = #{laterPostId,jdbcType = VARCHAR};
        COMMIT;
    </update>

    <insert id="insertUserCollection">
        BEGIN;
        INSERT INTO t_user_collection(
            USER_ID,
            POST_ID,
            CREATE_TIME,
            SORT_TIME
        )
        VALUES(#{userId},#{postId},now(),now());
        UPDATE t_post_base
        SET TOTAL_COLLECTION = (SELECT COUNT(0) FROM t_user_collection WHERE POST_ID =#{postId} AND IS_DEL =0)
        WHERE
        ID = #{postId};
        COMMIT;
    </insert>

</mapper>